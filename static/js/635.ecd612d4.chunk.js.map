{"version":3,"file":"static/js/635.ecd612d4.chunk.js","mappings":"sRAGaA,EAAkBC,EAAAA,GAAAA,GAAH,4DAKfC,EAAYD,EAAAA,GAAAA,GAAH,4KAYTE,GAAYF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,gKAWTI,EAAaJ,EAAAA,GAAAA,GAAH,+C,4HC7BVK,EAAaL,EAAAA,GAAAA,KAAH,gcAgBVM,EAAmBN,EAAAA,GAAAA,OAAH,wOAahBO,EAAkBP,EAAAA,GAAAA,MAAH,gQAefQ,EAAwBR,EAAAA,GAAAA,KAAH,6M,kBCzCrBS,EAAY,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAEvB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAeA,OACI,+BACI,UAACR,EAAD,CAAYK,SAXD,SAACI,GAEhBA,EAAMC,iBAENL,EAASE,GAETC,EAAQ,GACX,EAIO,WACI,UAACP,EAAD,CAAkBU,KAAK,SAAvB,WACI,SAAC,MAAD,KACA,SAACR,EAAD,yBAEJ,SAACD,EAAD,CACIS,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,mBACZP,KAAK,OACLQ,SA1BQ,SAACN,GACrBD,EAAQC,EAAMO,OAAOC,MACxB,QA6BJ,E,2BCrCYC,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEnBC,GAAWC,EAAAA,EAAAA,MAEjB,OACI,wBACKF,EAAOG,KAAI,SAAAC,GAAK,OACb,SAAC,KAAD,WAA0B,SAAC,KAAD,CACtBC,GAAE,kBAAaD,EAAME,IACrBC,MAAO,CAACC,KAAMP,GAFQ,SAGxBG,EAAMK,kBAHQL,EAAME,GADT,KAQ5B,E,SCXc,SAASI,IAEpB,OAAkCvB,EAAAA,EAAAA,UAAS,IAA3C,eAAOwB,EAAP,KAAkBC,EAAlB,KACA,GAA4BzB,EAAAA,EAAAA,UAAS,IAArC,eAAOa,EAAP,KAAea,EAAf,KACMZ,GAAWC,EAAAA,EAAAA,MACXY,GAAWC,EAAAA,EAAAA,MACjB,GAAuBC,EAAAA,EAAAA,MAEjBC,GAFN,eAE4BC,IAAI,cAEhCC,EAAAA,EAAAA,YAAU,WACY,KAAdR,IAIJS,EAAAA,EAAAA,IAAgBT,GACXU,MAAK,SAAAC,GAAI,OAAIA,EAAKC,OAAT,IACTF,KAAKR,EACb,GAAE,CAACF,KAEJQ,EAAAA,EAAAA,YAAU,WACS,OAAXF,IAIJG,EAAAA,EAAAA,IAAgBH,GAAQI,MAAK,SAAAC,GAAI,OAAIA,EAAKC,OAAT,IAAkBF,KAAKR,EAE3D,GAAE,CAACI,IAOJ,OACI,iCACI,SAAChC,EAAD,CAAWC,SAPM,SAACY,GACtBc,EAAad,GACbgB,GAAS,kBAAKb,GAAN,IAAgBgB,OAAO,aAAD,OAAenB,KAChD,IAKQE,IAAU,SAACD,EAAD,CAAYC,OAAQA,MAG1C,C","sources":["components/MoviesList/MoviesList.styled.js","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearhBar.js","components/MoviesList/MoviesList.js","pages/MoviesPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const TrendMoviesList = styled.li`\n  \n  list-style-position: inside;\n`;\n\nexport const MovieItem = styled.li`\n  padding-bottom: 8px;\n  &::marker {\n    color: #2a363b;\n    font-size: 30px;\n    font-weight: 500;\n  }\n  &:hover {\n    color: orange;\n  }\n`;\n\nexport const LinkStyle = styled(Link)`\n  color: #2a363b;\n  font-size: 24px;\n  font-weight: 500;\n  text-decoration: none;\n  &:hover,\n  &:focus {\n    color: orange;\n  }\n`;\n\nexport const TrandTitle = styled.h1`\n    margin-left: 32px;\n`","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  margin-top: 20px;\n  margin-bottom: 32px;\n  /* margin-left: auto; */\n  margin-right: auto;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n  -webkit-box-shadow: 0px 0px 30px 0px rgba(34, 60, 80, 0.2);\n  -moz-box-shadow: 0px 0px 30px 0px rgba(34, 60, 80, 0.2);\n  box-shadow: 0px 0px 30px 0px rgba(34, 60, 80, 0.2);\n`;\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    color: orange;\n  }\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  //   width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const SearchFormButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;","import { useState } from \"react\";\nimport { SearchForm, SearchFormInput, SearchFormButton, SearchFormButtonLabel } from \"./SearchBar.styled\";\nimport { BsSearch} from 'react-icons/bs'\n\n\nexport const SearchBar = ({onSubmit}) => {\n\n    const [name, setName] = useState('');\n\n    const handleInputForm = (event) => {\n        setName(event.target.value);\n    };\n\n    const formSubmit = (event) => {\n        \n        event.preventDefault();\n\n        onSubmit(name);\n        \n        setName('');\n    };\n\n    return (\n        <>\n            <SearchForm onSubmit={formSubmit}>\n                <SearchFormButton type=\"submit\">\n                    <BsSearch />\n                    <SearchFormButtonLabel>Search</SearchFormButtonLabel>\n                </SearchFormButton>\n                <SearchFormInput\n                    type=\"text\"\n                    autoComplete=\"off\"\n                    autoFocus\n                    placeholder=\"Search movies...\"\n                    name=\"name\"\n                    onChange={handleInputForm}\n                />           \n            </SearchForm>\n        </>\n    )\n}","import { useLocation } from \"react-router-dom\";\nimport { LinkStyle, MovieItem } from \"./MoviesList.styled\";\n\nexport const MoviesList = ({ movies }) => {\n\n    const location = useLocation();\n\n    return (\n        <ul>\n            {movies.map(movie => (\n                <MovieItem key={movie.id}><LinkStyle\n                    to={`/movies/${movie.id}`}\n                    state={{from: location}}\n                >{movie.original_title}</LinkStyle></MovieItem>\n            ))}\n        </ul>\n    )\n};","import { useState, useEffect } from 'react';\nimport { SearchBar } from 'components/SearchBar/SearhBar';\nimport { getMoviesByName } from 'components/api';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { useLocation, useNavigate, useSearchParams } from 'react-router-dom';\n\nexport default function MoviesPage () {\n\n    const [movieName, setMovieName] = useState('');\n    const [movies, setMovies] = useState([]);\n    const location = useLocation();\n    const navigate = useNavigate();\n    const [searchParams] = useSearchParams();\n\n    const search = searchParams.get('movieName');\n\n    useEffect(() => {\n        if (movieName === \"\") {\n            return;\n        };\n\n        getMoviesByName(movieName)\n            .then(data => data.results)\n            .then(setMovies);\n    }, [movieName]);\n\n    useEffect(() => {\n        if (search === null) {\n            return;\n        }\n\n        getMoviesByName(search).then(data => data.results).then(setMovies);\n\n    }, [search]);\n\n    const handleFormSubmit = (value) => {\n        setMovieName(value);\n        navigate({ ...location, search: `movieName=${value}`})\n    };\n\n    return (\n        <>\n            <SearchBar onSubmit={handleFormSubmit} />\n            {movies && <MoviesList movies={movies} />}\n        </>\n    );\n}"],"names":["TrendMoviesList","styled","MovieItem","LinkStyle","Link","TrandTitle","SearchForm","SearchFormButton","SearchFormInput","SearchFormButtonLabel","SearchBar","onSubmit","useState","name","setName","event","preventDefault","type","autoComplete","autoFocus","placeholder","onChange","target","value","MoviesList","movies","location","useLocation","map","movie","to","id","state","from","original_title","MoviesPage","movieName","setMovieName","setMovies","navigate","useNavigate","useSearchParams","search","get","useEffect","getMoviesByName","then","data","results"],"sourceRoot":""}